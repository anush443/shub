{"version":3,"sources":["views/pages/Transaction/TransctionTable.js"],"names":["StyledTableCell","withStyles","theme","body","fontSize","TableCell","StyledTableRow","root","TableRow","createData","name","calories","fat","carbs","protein","date","icon","rows","useStyles","makeStyles","TransactionBox","padding","color","palette","text","white","table","background","heading","borderRadius","marginBottom","display","alignItems","justifyContent","tablebody","boxShadow","inputFeild","paginationBox","marginTop","CustomizedTables","classes","useState","currentvalue","setCurrentValue","fromData","setFromData","mt","elevation","className","variant","container","spacing","item","xs","md","lg","onChange","e","target","value","label","style","width","margin","disableFuture","InputLabelProps","shrink","format","Date","aria-label","align","map","row","key","component","scope","src","alt","count","shape"],"mappings":"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","file":"static/js/45.ad34e134.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  withStyles,\n  makeStyles,\n  Box,\n  Typography,\n  MenuItem,\n  FormControl,\n  Select,\n  Paper,\n  Grid,\n} from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  body: {\n    fontSize: 13,\n    \"@media (max-width: 1533px)\": {\n      fontSize: 12,\n    },\n    \"@media (max-width: 1279px)\": {\n      fontSize: 13,\n    },\n    \n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      // background: theme.palette.background.paper,\n    },\n  },\n}))(TableRow);\n\nfunction createData(name, calories, fat, carbs, protein, date, icon) {\n  return { name, calories, fat, carbs, protein, date, icon };\n}\n\nconst rows = [\n  createData(\n    \"#UII1234Trsfd\",\n    \"BUSD\",\n    \"BOT Wars VS BOT Philipines\",\n    \"0.021\",\n    \" 12-08-22  01:21 PM\",\n    \"09XD........A02A\",\n    \"images/table_icon1.png\"\n  ),\n  createData(\n    \"#UII1234Trsfd\",\n    \"BUSD\",\n    \"BOT Wars VS BOT Philipines\",\n    \"0.021\",\n    \" 12-08-22  01:21 PM\",\n    \"09XD........A02A\",\n    \"images/table_icon1.png\"\n  ),\n  createData(\n    \"#UII1234Trsfd\",\n    \"BUSD\",\n    \"BOT Wars VS BOT Philipines\",\n    \"0.021\",\n    \" 12-08-22  01:21 PM\",\n    \"09XD........A02A\",\n    \"images/table_icon1.png\"\n  ),\n  createData(\n    \"#UII1234Trsfd\",\n    \"BUSD\",\n    \"BOT Wars VS BOT Philipines\",\n    \"0.021\",\n    \" 12-08-22  01:21 PM\",\n    \"09XD........A02A\",\n    \"images/table_icon.png\"\n  ),\n  createData(\n    \"#UII1234Trsfd\",\n    \"BUSD\",\n    \"BOT Wars VS BOT Philipines\",\n    \"0.021\",\n    \" 12-08-22  01:21 PM\",\n    \"09XD........A02A\",\n    \"images/table_icon.png\"\n  ),\n];\n\nconst useStyles = makeStyles((theme) => ({\n  TransactionBox: {\n    padding: \"25px 15px\",\n\n    \"& h5\": {\n      color: theme.palette.text.white,\n    },\n  },\n  table: {\n    // minWidth: 864,\n    \"& .tableHead\": {\n      background: theme.palette.background.heading,\n    },\n \n  },\n  heading: {\n    background: theme.palette.background.heading,\n    borderRadius: \"100px\",\n    padding: \"20px 30px\",\n    marginBottom: \"2rem\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  tablebody: {\n    boxShadow: \"0px 0px 20px rgb(0 0 0 / 20%)\",\n  },\n  inputFeild: {},\n  paginationBox: {\n    display: \"flex\",\n    justifyContent: \"end\",\n    marginTop: \"15px\",\n  },\n}));\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  const [currentvalue, setCurrentValue] = useState(\"All\");\n  const [fromData, setFromData] = useState();\n\n  return (\n    <Paper mt={4} elevation={2} className={classes.TransactionBox}>\n      <Box className={classes.heading}>\n        <Typography variant=\"h5\">Transactions History</Typography>\n        {/*<Box>\n          <img\n            src=\"images/pro.png\"\n            alt=\"flag\"\n            style={{ marginRight: \"15px\" }}\n          />\n\n          <img src=\"images/pro.png\" alt=\"flag\" />\n  </Box>*/}\n      </Box>\n      <Box mt={5}>\n        <Grid container spacing={2}>\n          <Grid item xs={4} md={6} lg={2}>\n            <Select\n              onChange={(e) => setCurrentValue(e.target.value)}\n              value={currentvalue}\n              label=\"Age\"\n              style={{ width: \"100%\" }}\n            >\n              <MenuItem value=\"All\">All</MenuItem>\n              <MenuItem value=\"Mental Health\">Mental Health</MenuItem>\n              <MenuItem value=\"Menstrual Health\"> Menstrual Health</MenuItem>\n              <MenuItem value=\"Personal Safety\">Personal Safety</MenuItem>\n              <MenuItem value=\"Support Service\">Support Service</MenuItem>\n            </Select>\n          </Grid>\n          <Grid item xs={8} md={6} lg={10}>\n            <KeyboardDatePicker\n              className={classes.inputFeild}\n              margin=\"normal\"\n              disableFuture={true}\n              InputLabelProps={{ shrink: true }}\n              format=\"DD/MM/YYYY\"\n              value={fromData}\n              onChange={(date) => {\n                setFromData(new Date(date));\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Box>\n      <Box mt={2}>\n        <Paper elevation={2}>\n          <TableContainer>\n            <Table className={classes.table} aria-label=\"customized table\">\n              <TableHead className=\"tableHead\">\n                <TableRow>\n                  <StyledTableCell>Transaction ID</StyledTableCell>\n                  <StyledTableCell align=\"left\">Crypto Name</StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    Tournament Name\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">Amount</StyledTableCell>\n                  <StyledTableCell align=\"left\">Date & Time</StyledTableCell>\n                  <StyledTableCell align=\"left\">From Address</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody className={classes.tablebody}>\n                {rows.map((row) => (\n                  <StyledTableRow key={row.name}>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      <Box className=\"flexjustify\">\n                        <img src={row.icon} alt=\"imag\" /> &nbsp; &nbsp;\n                        {row.name}\n                      </Box>\n                    </StyledTableCell>\n                    <StyledTableCell align=\"left\">\n                      {row.calories}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"left\">{row.fat}</StyledTableCell>\n                    <StyledTableCell align=\"left\">{row.carbs}</StyledTableCell>\n                    <StyledTableCell align=\"left\">\n                      {row.protein}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"left\">\n                      {row.protein}\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n            <Box className={classes.paginationBox}>\n              <Pagination count={10} shape=\"rounded\" />\n            </Box>\n          </TableContainer>\n        </Paper>\n      </Box>\n    </Paper>\n  );\n}\n"],"sourceRoot":""}