{"version":3,"sources":["component/ProfileCard.js","services/withdrawORDeposit.js","views/pages/Wallet/Deposit.js","views/pages/Wallet/Withdraw.js","views/pages/Wallet/Index.js"],"names":["useStyles","makeStyles","theme","profileCardBox","position","background","palette","heading","color","lineHeight","fontSize","fontWeight","fontFamily","fontStyle","marginLeft","width","text","noticetext","myaccount","img","name","price","Flex","styled","div","TokenInfo","classes","className","container","spacing","item","xs","lg","md","elevation","style","borderRadius","align","padding","variant","pt","pb","alignItems","map","data","sm","src","alt","web3","contract1","popluarabi","require","erc20abi","Web3","erc20addresss","web3New","window","ethereum","Biconomy","Contract","inputs","internalType","type","payable","stateMutability","anonymous","indexed","constant","outputs","domainType","metaTransactionType","domainData","version","verifyingContract","selectedAddress","initBiconomy","isMetaMask","provider","enable","networkVersion","chainId","biconomy","apiKey","debug","onEvent","READY","eth","on","accounts","ERROR","error","message","console","log","onBiconomy","amount","userAddress","methods","getNonce","call","nonce","utils","toBN","toString","toWei","functionSignature","deposit","encodeABI","parseInt","from","dataToSign","JSON","stringify","types","EIP712Domain","MetaTransaction","domain","primaryType","currentProvider","send","jsonrpc","id","method","params","response","alert","result","getSignatureParameters","r","s","v","sendSignedTransaction","transferer20","hash","once","confirmationNumber","receipt","transactionHash","onBiconomy1","address","withdraw","functionData","executeMetaTransaction","estimateGas","gasLimit","getGasPrice","gasPrice","status","signature","isHexStrict","Error","concat","slice","hexToNumber","includes","getAccount","getAccounts","ERC","deposit1","accountsNew","amountnew","approve","createReceipt","withdraw1","value","Number","toFixed","signTransaction","to","gas","createTransaction","rawTransaction","i","selectbox3","height","selectbox4","paddingLeft","formControl2","selectBox","display","exchange","marginTop","breakpoints","down","Deposit","dispatch","useDispatch","useState","Fund","setFund","loader","setLoader","snackBarContent","setSnackBarContent","snackBarMsg","setSnackBarMsg","snackBarStatus","setSnackBarStatus","select1","setSelect1","snackBar","msg","setTimeout","depositeCurrency","_fund","updateBalance","balance","getBalanceAction","useEffect","SnackbarService","Box","Grid","Typography","mt","FormControl","Select","size","fullWidth","onChange","event","target","MenuItem","TextField","placeholder","e","Button","disabled","CircularProgress","onClick","paragraph","copyicon","token","float","tokenImg","Withdraw","setWithdraw","localStorage","getItem","withdrawCurrency","margin","visibility","centering","cursor","maxWidth","boxSizing","border","bottom","secondDeault","Transform","whiteSpace","overflow","textOverflow","borderRight","profileBox","marginRight","swapbtn","temporaryDiv","justifyContent","midDisclamer","textDisclamer","Index","tabViews","setTabViews","tabViews1","setTabViews1","checkWithdraw","setcheckWithdraw","checkDeposit","setcheckDeposit","openSwap","setOpenSwap","setAddress","copySuccess","setCopySuccess","copyAddress","ProfileCard","Paper","IconButton","Dialog","open","onClose"],"mappings":"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","file":"static/js/21.ff8b3e45.chunk.js","sourcesContent":["import React from \"react\";\nimport { Box, Typography, Grid, makeStyles, Paper } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nconst useStyles = makeStyles((theme) => ({\n  profileCardBox: {\n    position: \"relative\",\n    \"& .accountBox\": {\n      \"& .headingBox\": {\n        background: theme.palette.background.heading,\n\n        \"& p\": {\n          color: \"#39AED0\",\n          lineHeight: \"26px\",\n        },\n        \"& h5\": {\n          fontSize: \"20px\",\n          fontWeight: \"600\",\n          fontFamily: \"Red Hat Mono\",\n          fontStyle: \"normal\",\n        },\n      },\n      \"& .flexjustifycenter\": {\n        \"& h5\": {\n          fontSize: \"15px\",\n          lineHeight: \"27px\",\n          marginLeft: \"15px\",\n          fontWeight: \"600\",\n          fontFamily: \"Red Hat Mono\",\n          fontStyle: \"normal\",\n        },\n      },\n      \"& img\": {\n        width: \"20px\",\n      },\n      \"& sub\": {\n        fontSize: \"12px\",\n        color: \"#787878\",\n      },\n    },\n    \"& .priceText\": {\n      color: theme.palette.text.noticetext,\n      fontSize: \"13px\",\n      fontFamily: \"Red Hat Mono\",\n    },\n  },\n}));\nconst myaccount = [\n  {\n    img: \"images/dexwinCoin.png\",\n    name: \"0.000217\",\n    price: \"( $ DWIN )\",\n  },\n];\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TokenInfo = () => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.profileCardBox}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} lg={6} md={12}>\n          <Paper\n            className=\"accountBox\"\n            elevation={2}\n            style={{ borderRadius: \"25px 0px 25px 25px\" }}\n          >\n            <Box className=\"headingBox\" align=\"center\">\n              <Box style={{ padding: \"10px\" }}>\n                <Typography variant=\"body1\">TOTAL BALANCE</Typography>\n                <Typography variant=\"h5\">$ DWIN</Typography>\n              </Box>\n            </Box>\n\n            <Box pt={2} pb={2}>\n              <Grid container spacing={0} alignItems=\"center\">\n                {myaccount.map((data) => {\n                  return (\n                    <>\n                      <Grid item xs={6} lg={6} sm={6}>\n                        <Box className=\"flexjustifycenter\">\n                          <img src={data.img} alt=\"image\" />\n                          <Flex>\n                            <Typography variant=\"h5\">{data.name}</Typography>\n                            &nbsp;\n                            <sub>BNB</sub>\n                          </Flex>\n                        </Box>\n                      </Grid>\n                      <Grid item xs={6} lg={6} sm={6} align=\"center\">\n                        <Typography variant=\"body1\" className=\"priceText\">\n                          {data.price}\n                        </Typography>\n                      </Grid>\n                    </>\n                  );\n                })}\n              </Grid>\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} lg={6} md={12}>\n          <Paper className=\"accountBox\" elevation={2}>\n            <Box className=\"headingBox\" align=\"center\">\n              <Box style={{ padding: \"10px\" }}>\n                <Typography variant=\"body1\">MONEY ON BETS</Typography>\n                <Typography variant=\"h5\" className=\"numericals\">\n                  $ DWIN\n                </Typography>\n              </Box>\n            </Box>\n\n            <Box pt={2} pb={2}>\n              <Grid container spacing={0} alignItems=\"center\">\n                {myaccount.map((data) => {\n                  return (\n                    <>\n                      <Grid item xs={6} lg={6} sm={6}>\n                        <Flex>\n                          <Box className=\"flexjustifycenter\">\n                            <img src={data.img} />\n                            <Flex>\n                              <Typography variant=\"h5\">{data.name}</Typography>\n                              &nbsp;\n                              <sub>BNB</sub>\n                            </Flex>\n                          </Box>\n                        </Flex>\n                      </Grid>\n                      <Grid item xs={6} lg={6} sm={6} align=\"center\">\n                        <Typography variant=\"body1\" className=\"priceText\">\n                          {data.price}\n                        </Typography>\n                      </Grid>\n                    </>\n                  );\n                })}\n              </Grid>\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default TokenInfo;\n","const popluarabi = require(\"./ABI.json\");\nconst erc20abi = require(\"./erc20.json\");\nconst Web3 = require(\"web3\");\n//const ethers = require(\"ethers\");\nconst privtekey =\n  \"1941513d63965c36deed9900ac8449315645848df2a5eea731ec590f14d005fa\";\nconst contractAddress = \"0x895d947674Db8819Db32A1eb6510A0febDbf22b6\"; //\"0xd3b3f6540704e0e1bc42204250a8c29a584324a8\";\nconst erc20addresss = \"0x5542d426446Bc1A4Bc92990297d2CCF5228FC477\";\nconst url =\n  \"https://wandering-sparkling-ensemble.matic-testnet.discover.quiknode.pro/ba4696ce9640d389c8492143fe155d61ac971f31/\";\nlet web3;\nlet web3New = new Web3(\n  window.ethereum\n  //url\n);\nlet sigUtil = require(\"eth-sig-util\");\nconst { Biconomy } = require(\"@biconomy/mexa\");\nconst Contract = {\n  address: \"0x953060B762c8aa151D00f014b19EE86F8e71F732\",\n  //\"0x1c77930fEED5580431679066D260348E91B05D72\",\n  //\"0x94c0104e7a296efde81cb69e2a5295a675e594b8\",\n  //\"0x3Bfff6a44BbEd2956601aC33000bfa745565CaD6\",\n  abi: [\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_token\",\n          type: \"address\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: false,\n          internalType: \"address\",\n          name: \"userAddress\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"address payable\",\n          name: \"relayerAddress\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"bytes\",\n          name: \"functionSignature\",\n          type: \"bytes\",\n        },\n      ],\n      name: \"MetaTransactionExecuted\",\n      type: \"event\",\n    },\n    {\n      constant: true,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      name: \"balance\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"claim\",\n      outputs: [],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"a\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"deposit\",\n      outputs: [],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"userAddress\",\n          type: \"address\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"functionSignature\",\n          type: \"bytes\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"sigR\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"sigS\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"uint8\",\n          name: \"sigV\",\n          type: \"uint8\",\n        },\n      ],\n      name: \"executeMetaTransaction\",\n      outputs: [\n        {\n          internalType: \"bytes\",\n          name: \"\",\n          type: \"bytes\",\n        },\n      ],\n      payable: true,\n      stateMutability: \"payable\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"user\",\n          type: \"address\",\n        },\n      ],\n      name: \"getNonce\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"nonce\",\n          type: \"uint256\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"owner\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"palcebet\",\n      outputs: [],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"quote\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"withdraw\",\n      outputs: [],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n  ],\n};\n\nconst domainType = [\n  { name: \"name\", type: \"string\" },\n  { name: \"version\", type: \"string\" },\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" },\n];\n\nconst metaTransactionType = [\n  { name: \"nonce\", type: \"uint256\" },\n  { name: \"from\", type: \"address\" },\n  { name: \"functionSignature\", type: \"bytes\" },\n];\n\nlet domainData = {\n  name: \"TestContract\",\n  version: \"1\",\n  verifyingContract: Contract.address,\n};\n\nvar selectedAddress = \"\";\n\nvar metaTxEnabled = true;\nlet contract1;\nlet transactionHash;\n\n// Initialize Biconomy\nexport async function initBiconomy() {\n  if (typeof window.ethereum !== \"undefined\" && window.ethereum.isMetaMask) {\n    // Ethereum user detected. You can now use the provider.\n    const provider = window[\"ethereum\"];\n    await provider.enable();\n    if (provider.networkVersion == \"80001\") {\n      domainData.chainId = 80001;\n      const biconomy = new Biconomy(provider, {\n        apiKey: \"eRzaPVk4O.39945c88-3886-43fd-80fe-1a27c7d591fa\",\n        //\"O3-IjZClP.ce1ab5be-6f1d-4355-a450-f6a553818f12\"//\"MublK0H-b.864389b3-e421-4ddb-b56b-e5a1bca3e109\"\n        debug: true,\n      });\n      web3 = new Web3(biconomy);\n\n      biconomy\n        .onEvent(biconomy.READY, () => {\n          // Initialize your dapp here like getting user accounts etc\n          contract1 = new web3.eth.Contract(Contract.abi, Contract.address);\n          selectedAddress = provider.selectedAddress;\n          // getQuoteFromNetwork();\n          provider.on(\"accountsChanged\", function (accounts) {\n            selectedAddress = accounts[0];\n          });\n        })\n        .onEvent(biconomy.ERROR, (error, message) => {\n          // Handle error while initializing mexa\n        });\n        console.log('initalization complete');\n     \n    } else {\n    }\n  } else {\n  }\n}\n\nconst onBiconomy = async (amount) => {\n  if (contract1) {\n    transactionHash = \"\";\n    if (metaTxEnabled) {\n      let userAddress = selectedAddress;\n      let nonce = await contract1.methods.getNonce(userAddress).call();\n      amount = web3.utils.toBN(amount).toString();\n      amount = web3.utils.toWei(amount, \"ether\");\n\n      let functionSignature = contract1.methods\n        .deposit(\"0x953060B762c8aa151D00f014b19EE86F8e71F732\", amount)\n        .encodeABI();\n      let message = {};\n      message.nonce = parseInt(nonce);\n      message.from = userAddress;\n      message.functionSignature = functionSignature;\n\n      const dataToSign = JSON.stringify({\n        types: {\n          EIP712Domain: domainType,\n          MetaTransaction: metaTransactionType,\n        },\n        domain: domainData,\n        primaryType: \"MetaTransaction\",\n        message: message,\n      });\n\n      web3.currentProvider.send(\n        {\n          jsonrpc: \"2.0\",\n          id: 999999999999,\n          method: \"eth_signTypedData_v4\",\n          params: [userAddress, dataToSign],\n        },\n        function (error, response) {\n          if (error || (response && response.error)) {\n            alert(\"Could not get user signature. Please retry!\");\n          } else if (response && response.result) {\n            let { r, s, v } = getSignatureParameters(response.result);\n\n            return sendSignedTransaction(\n              userAddress,\n              functionSignature,\n              r,\n              s,\n              v\n            );\n          }\n        }\n      );\n\n      console.log('tx complete')\n    } else {\n      contract1.methods\n        .transferer20(\"0x94c0104e7a296efde81cb69e2a5295a675e594b8\", \"1\")\n        .send({ from: selectedAddress })\n        .on(\"transactionHash\", function (hash) {})\n        .once(\"confirmation\", function (confirmationNumber, receipt) {\n          var transactionHash = receipt.transactionHash;\n        });\n    }\n  } else {\n  }\n};\n\nconst onBiconomy1 = async (address, amount) => {\n  if (contract1) {\n    transactionHash = \"\";\n    if (metaTxEnabled) {\n      let userAddress = selectedAddress;\n      let nonce = await contract1.methods.getNonce(userAddress).call();\n      amount = web3.utils.toBN(amount).toString();\n      amount = web3.utils.toWei(amount, \"ether\");\n\n      // let functionSignature = contract1.methods.transfertouser(\n      // \taddress,\n      // \t//\"0x94c0104e7a296efde81cb69e2a5295a675e594b8\",\n      // \tamount\n      // \t).encodeABI();\n      //let functionSignature = contract.methods.placebet(\"1\",\"1\",\"324\",\"0\",\"moneyline\",\"278\").encodeABI();\n      let functionSignature = contract1.methods.withdraw(amount).encodeABI();\n\n      let message = {};\n      message.nonce = parseInt(nonce);\n      message.from = userAddress;\n      message.functionSignature = functionSignature;\n\n      const dataToSign = JSON.stringify({\n        types: {\n          EIP712Domain: domainType,\n          MetaTransaction: metaTransactionType,\n        },\n        domain: domainData,\n        primaryType: \"MetaTransaction\",\n        message: message,\n      });\n\n      web3.currentProvider.send(\n        {\n          jsonrpc: \"2.0\",\n          id: 999999999999,\n          method: \"eth_signTypedData_v4\",\n          params: [userAddress, dataToSign],\n        },\n        function (error, response) {\n          if (error || (response && response.error)) {\n            alert(\"Could not get user signature. Please retry!\");\n          } else if (response && response.result) {\n            let { r, s, v } = getSignatureParameters(response.result);\n            console.log(\"running status\")\n            return sendSignedTransaction(\n              userAddress,\n              functionSignature,\n              r,\n              s,\n              v\n            );\n          }\n        }\n      );\n    } else {\n      contract1.methods\n        .transferer20(\"0x94c0104e7a296efde81cb69e2a5295a675e594b8\", \"1\")\n        .send({ from: selectedAddress })\n        .on(\"transactionHash\", function (hash) {})\n        .once(\"confirmation\", function (confirmationNumber, receipt) {\n          var transactionHash = receipt.transactionHash;\n        });\n    }\n  } else {\n  }\n};\n\nconst sendSignedTransaction = async (userAddress, functionData, r, s, v) => {\n  if (web3 && contract1) {\n    try {\n      let gasLimit = await contract1.methods\n        .executeMetaTransaction(userAddress, functionData, r, s, v)\n        .estimateGas({ from: userAddress });\n      let gasPrice = await web3.eth.getGasPrice();\n\n      let tx = contract1.methods\n        .executeMetaTransaction(userAddress, functionData, r, s, v)\n        .send({\n          from: userAddress,\n          gasPrice: gasPrice,\n          gasLimit: gasLimit,\n        });\n\n      tx.on(\"transactionHash\", function (hash) {}).once(\n        \"confirmation\",\n        function (confirmationNumber, receipt) {\n          transactionHash = receipt.transactionHash;\n\n          return {\n            status: \"success\",\n            message: \"Transaction confirmed on chain\",\n            hash: transactionHash,\n          };\n        }\n      );\n    } catch (error) {}\n  }\n};\n\nconst getSignatureParameters = (signature) => {\n  if (!web3.utils.isHexStrict(signature)) {\n    throw new Error(\n      'Given value \"'.concat(signature, '\" is not a valid hex string.')\n    );\n  }\n  var r = signature.slice(0, 66);\n  var s = \"0x\".concat(signature.slice(66, 130));\n  var v = \"0x\".concat(signature.slice(130, 132));\n  v = web3.utils.hexToNumber(v);\n  if (![27, 28].includes(v)) v += 27;\n  return {\n    r: r,\n    s: s,\n    v: v,\n  };\n};\n\nasync function getAccount() {\n  if (window.ethereum) {\n    await window.ethereum.send(\"eth_requestAccounts\");\n    window.web3 = new Web3(window.ethereum);\n    var accounts = await window.web3.eth.getAccounts();\n\n    return accounts[0];\n  } else {\n    return \"Not Connected\";\n  }\n}\n\nvar contractNEW = new web3New.eth.Contract(popluarabi, contractAddress);\nvar ERC = new web3New.eth.Contract(erc20abi, erc20addresss);\n\nconst init = async (accounts) => {\n  let initbla = await ERC.methods.balanceOf(accounts).call();\n};\n\nconst approve = async (amount, accounts) => {\n  const appr1 = await ERC.methods\n    .approve(contractAddress, amount)\n    .send({ from: accounts, gasLimit: 300000 });\n};\n\ninitBiconomy();\n\nexport const deposit1 = async (amount) => {\n  try {\n    const accountsNew = await getAccount([0]);\n    const amountnew = web3.utils.toWei(amount);\n    const createReceipt = await ERC.methods\n      .approve(\"0x953060b762c8aa151d00f014b19ee86f8e71f732\", amountnew)\n      .send({ from: accountsNew, gasLimit: 300000 });\n    const biconomy = await onBiconomy(amount);\n\n    if (createReceipt) {\n      return createReceipt;\n    } else {\n      return false;\n    }\n  } catch (err) {\n    return false;\n  }\n};\n\nexport const withdraw1 = async (value) => {\n  try {\n    const accountsNew = await getAccount([0]);\n    const biconomy = await onBiconomy1(accountsNew, value * 1 ** 18);\n\n    const amount = Number(0 * 1e18).toFixed(0);\n    const data = await ERC.methods\n      .approve(\"0x953060b762c8aa151d00f014b19ee86f8e71f732\", amount)\n      .encodeABI();\n    const createTransaction = await web3New.eth.accounts.signTransaction(\n      {\n        from: accountsNew,\n        to: erc20addresss,\n        data: data,\n        gas: \"500000\",\n      },\n      privtekey // private key variable\n    );\n    const createReceipt = await web3New.eth.sendSignedTransaction(\n      createTransaction.rawTransaction\n    );\n\n    if (createReceipt) {\n      return createReceipt;\n    } else {\n      return false;\n    }\n  } catch (err) {\n    return false;\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  makeStyles,\n  TextField,\n  Select,\n  MenuItem,\n  Button,\n} from \"@material-ui/core\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SnackbarService from \"src/services/SnackbarService\";\nimport { deposit1, initBiconomy } from \"src/services/withdrawORDeposit\";\nimport { getBalanceAction } from \"../../../redux/actions/balanceAction\";\nimport { updateBalance } from \"../../../services/updateBalance\";\nimport { useDispatch } from \"react-redux\";\n// deposit data\n\nconst useStyles = makeStyles((theme) => ({\n  selectbox3: {\n    height: \"50px !important\",\n  },\n  selectbox4: {\n    height: \"50px !important\",\n    paddingLeft: \"15px\",\n  },\n  formControl2: {\n    width: \"100%\",\n    borderRadius: \"100px !important\",\n  },\n  selectBox: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& h5\": {\n      fontSize: \"14px\",\n      marginLeft: \"10px\",\n      fontWeight: \"700\",\n    },\n    \"& img\": {\n      width: \"25px\",\n    },\n  },\n  exchange: {\n    marginTop: \"5rem\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: \"2rem\",\n    },\n  },\n}));\nconst Deposit = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  // const [select, setSelect] = useState(\"Deposite\"); //Coming Soon\n  // const [widthdraw, setWidthdraw] = useState(\"Withdraw\");\n  const [Fund, setFund] = useState(\"\");\n  const [loader, setLoader] = useState(false);\n  const [snackBarContent, setSnackBarContent] = useState(false);\n  const [snackBarMsg, setSnackBarMsg] = useState(\"\");\n  const [snackBarStatus, setSnackBarStatus] = useState(\"\");\n\n  //Coming Soon!\n  // const handleChange2 = (event) => {\n  //   setWidthdraw(event.target.value);\n  // };\n  // const handleChange = (event) => {\n  //   setSelect(event.target.value);\n  // };\n\n  const [select1, setSelect1] = useState(\"BTC\");\n  const handleChange1 = (event) => {\n    setSelect1(event.target.value);\n  };\n\n  const snackBar = (msg, status) => {\n    setSnackBarMsg(msg);\n    setSnackBarStatus(status);\n    setSnackBarContent(true);\n    setTimeout(() => {\n      setSnackBarContent(false);\n    }, 2000);\n  };\n\n  const depositeCurrency = async (_fund) => {\n    try {\n      setLoader(true);\n      const res = await deposit1(_fund);\n      if (res) {\n        setTimeout(async () => {\n          const balance = await updateBalance();\n          setLoader(false);\n          snackBar(\"Deposite \" + _fund + \" amount successfully.\", \"success\");\n          dispatch(getBalanceAction(balance));\n        }, 30000);\n      } else {\n        setLoader(false);\n      }\n    } catch (err) {\n      snackBar(err, \"danger\");\n      setLoader(false);\n    }\n  };\n  // end of deposit functionality\n  useEffect(() => {\n    initBiconomy();\n  }, []);\n  return (\n    <>\n      {snackBarContent && (\n        <SnackbarService msg={snackBarMsg} status={snackBarStatus} />\n      )}\n      <Box className=\"Banner\">\n        <Box className={classes.exchange}>\n          <Grid container spacing={2}>\n            <Grid item lg={12} xs={12}>\n              <Box>\n                <Typography variant=\"body2\" style={{ color: \"#787878\" }}>\n                  Deposit\n                </Typography>\n                <Box mt={2}>\n                  <FormControl className={classes.formControl2}>\n                    <Select\n                      className={classes.selectbox3}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      fullWidth\n                      name=\"weather\"\n                      value={select1}\n                      onChange={handleChange1}\n                    >\n                      <MenuItem value={\"BTC\"}>\n                        <Box className={classes.selectBox}>\n                          <img src=\"images/dexwinCoin.png\" alt=\"image\" />\n                          <Typography variant=\"h5\">DWIN</Typography>\n                        </Box>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </Box>\n              </Box>\n            </Grid>\n            <Grid item lg={12} xs={12}>\n              <Box>\n                <TextField\n                  className=\"select4\"\n                  variant=\"outlined\"\n                  type=\"number\"\n                  fullWidth\n                  placeholder=\"Enter Amount\"\n                  onChange={(e) => {\n                    setFund(e.target.value);\n                  }}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n          <Box align=\"center\" mt={3}>\n            {loader ? (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                fullWidth\n                className=\"gradientButton\"\n                disabled\n              >\n                {\" \"}\n                <CircularProgress color=\"secondary\" />\n              </Button>\n            ) : (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                fullWidth\n                className=\"gradientButton\"\n                onClick={() => {\n                  depositeCurrency(Fund);\n                }}\n              >\n                Submit{\" \"}\n              </Button>\n            )}\n          </Box>\n        </Box>\n        <NotificationContainer />\n      </Box>\n    </>\n  );\n};\n\nexport default Deposit;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  makeStyles,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { withdraw1 } from \"src/services/withdrawORDeposit\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SnackbarService from \"src/services/SnackbarService\";\nimport { getBalanceAction } from \"../../../redux/actions/balanceAction\";\nimport { updateBalance } from \"../../../services/updateBalance\";\nimport { useDispatch } from \"react-redux\";\nconst useStyles = makeStyles((theme) => ({\n  formControl2: {\n    width: \"100%\",\n    borderRadius: \"100px !important\",\n  },\n  paragraph: {\n    marginTop: \"2rem\",\n    \"& P\": {\n      color: \"#8D8D8D\",\n    },\n  },\n  copyicon: {},\n  selectBox: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& h5\": {\n      fontSize: \"14px\",\n      marginLeft: \"10px\",\n      fontWeight: \"700\",\n    },\n    \"& img\": {\n      width: \"25px\",\n    },\n  },\n  exchange: {\n    marginTop: \"5rem\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: \"2rem\",\n    },\n  },\n  token: {\n    display: \"flex\",\n    float: \"right\",\n    alignItems: \"center\",\n  },\n  tokenImg: {\n    height: \"17px\",\n    width: \"10px\",\n  },\n}));\n\nconst Withdraw = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [loader, setLoader] = useState(false);\n  const [snackBarContent, setSnackBarContent] = useState(false);\n  const [snackBarMsg, setSnackBarMsg] = useState(\"\");\n  const [snackBarStatus, setSnackBarStatus] = useState(\"\");\n  const [withdraw, setWithdraw] = useState(\"\");\n  const balance = localStorage.getItem(\"userBalance\");\n\n  const snackBar = (msg, status) => {\n    setSnackBarMsg(msg);\n    setSnackBarStatus(status);\n    setSnackBarContent(true);\n    setTimeout(() => {\n      setSnackBarContent(false);\n    }, 2000);\n  };\n\n  const withdrawCurrency = async (_fund) => {\n    try {\n      if (balance >= _fund && _fund >= 1) {\n        setLoader(true);\n        const res = await withdraw1(_fund);\n        if (res) {\n          setTimeout(async () => {\n            const balance = await updateBalance();\n            setLoader(false);\n            snackBar(\"Withdraw \" + _fund + \" amount successfully.\", \"success\");\n            dispatch(getBalanceAction(balance));\n          }, 30000);\n        } else {\n          setLoader(false);\n        }\n      } else {\n        snackBar(\n          \"Insufficient funds, withdrawl amount should be less than your balance.\",\n          \"danger\"\n        );\n      }\n    } catch (err) {\n      snackBar(err, \"danger\");\n      setLoader(false);\n    }\n  };\n\n  return (\n    <>\n      <Box className=\"Banner\">\n        <Box className={classes.exchange}>\n          <Grid container spacing={2}>\n            <Grid item lg={12} xs={12}>\n              <Box className=\"justifyBetween\" style={{ margin: \"0rem 0.5rem\" }}>\n                <Typography variant=\"body2\" style={{ color: \"#FFFFFF\" }}>\n                  Withdraw\n                </Typography>\n                <Typography\n                  variant=\"body1\"\n                  style={{ color: \"#787878\", visibility: \"hidden\" }}\n                >\n                  Max 000.35BTC\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item lg={12} xs={12}>\n              <Box mt={1}>\n                <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  placeholder=\"Withdrawal amount\"\n                  value={withdraw}\n                  onChange={(e) => {\n                    setWithdraw(e.target.value);\n                  }}\n                />\n              </Box>\n              <Box align=\"right\" mt={1}>\n                <Typography variant=\"body1\" className={classes.token}>\n                  <span style={{ color: \"#7784DA\" }}>Available Balance</span>\n                  &nbsp; : &nbsp;\n                  <img\n                    className={classes.tokenImg}\n                    src=\"images/token.svg\"\n                  />{\" \"}\n                  &nbsp;{balance}\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n\n          <Box align=\"center\" mt={3}>\n            {loader ? (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                fullWidth\n                className=\"gradientButton\"\n                disabled\n              >\n                {\" \"}\n                <CircularProgress color=\"secondary\" />{\" \"}\n              </Button>\n            ) : (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                fullWidth\n                className=\"gradientButton\"\n                onClick={() => {\n                  withdrawCurrency(withdraw);\n                }}\n              >\n                Withdraw\n              </Button>\n            )}\n            {snackBarContent && (\n              <SnackbarService msg={snackBarMsg} status={snackBarStatus} />\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default Withdraw;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  Container,\n  makeStyles,\n  TextField,\n  Select,\n  Dialog,\n  InputAdornment,\n  MenuItem,\n  Paper,\n  Button,\n  IconButton,\n} from \"@material-ui/core\";\nimport { MdOutlineContentCopy, MdCheck } from \"react-icons/md\";\nimport Deposit from \"./Deposit\";\nimport Withdraw from \"./Withdraw\";\nimport ProfileCard from \"src/component/ProfileCard\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport SnackbarService from \"src/services/SnackbarService\";\n// Coming Soon  \n// import SwapModal from \"src/component/SwapModal\";\n// import DepositFromExchange from \"./DepositFromExchange\";\n// import WithdrawFromExchange from \"./WithdrawFromExchange\";\nconst useStyles = makeStyles((theme) => ({\n  centering: {\n    \"& .profileBoxImg\": {\n      position: \"relative\",\n      \"& img\": {\n        cursor: \"pointer\",\n        position: \"relative\",\n        maxWidth: \"148px\",\n        boxSizing: \"border-box\",\n        borderRadius: \"50%\",\n        border: \"4px solid #515151\",\n      },\n      \"& .editprofile\": {\n        position: \"absolute\",\n        marginLeft: \"-26px\",\n        bottom: \"50px\",\n        width: \"32px\",\n        height: \"32px\",\n        background: theme.palette.background.secondDeault,\n        borderRadius: \"50%\",\n        Transform: \"translate(-50%, -50%)\",\n        cursor: \"pointer\",\n      },\n    },\n    \"& p\": {\n      whiteSpace: \"nowrap\",\n      width: \"102px\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n    },\n    borderRight: \"1px solid #413F3F\",\n    [theme.breakpoints.down(\"sm\")]: {\n      border: \"none\",\n    },\n  },\n  profileBox: {\n    marginTop: \"20px\",\n\n    borderRadius: \"20px\",\n    position: \"relative\",\n    padding: \"50px 15px\",\n    \"& h4\": {\n      color: \"#7784DA !important\",\n    },\n    \"& input::placeholder\": {\n      fontSize: \"13px\",\n    },\n    \"& .depositeBox\": {\n      marginRight: \"10px\",\n\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"100%\",\n      },\n    },\n    \"& .withdrawBox\": {\n      borderRadius: \"50px\",\n\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"100%\",\n      },\n    },\n  },\n  exchange: {\n    marginTop: \"5rem\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: \"2rem\",\n    },\n  },\n  swapbtn: {\n    marginTop: \"5rem\",\n  },\n  temporaryDiv: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: \"2rem 0px\",\n  },\n  heading: {\n    fontFamily: \"K2D\",\n    fontStyle: \"normal\",\n    fontWeight: \"500\",\n    fontSize: \"14px\",\n    lineHeight: \"18px\",\n    color: \"#FFFFFF\",\n  },\n  midDisclamer: {\n    margin: \"14px auto\",\n  },\n  textDisclamer: {\n    color: \"#787878\",\n    padding: \"1rem 4rem\",\n    justifyContent: \"center\",\n    fontFamily: \"K2D\",\n    fontStyle: \"normal\",\n    fontWeight: \"400\",\n    fontSize: \"12px\",\n    color: \"#8D8D8D\",\n  }\n}));\n\nconst Index = () => {\n  const classes = useStyles();\n  const [tabViews, setTabViews] = useState(\"deposit\");\n  const [tabViews1, setTabViews1] = useState(\"withdraw\");\n  const [checkWithdraw, setcheckWithdraw] = useState(false);\n  const [checkDeposit, setcheckDeposit] = useState(true);\n  const [openSwap, setOpenSwap] = useState(false);\n  const [address, setAddress] = useState([]);\n  const [copySuccess, setCopySuccess] = useState(false);\n\n  const [snackBarContent, setSnackBarContent] = useState(false);\n  const [snackBarMsg, setSnackBarMsg] = useState(\"\");\n  const [snackBarStatus, setSnackBarStatus] = useState(\"\");\n\n  const snackBar = (msg, status) => {\n    setSnackBarMsg(msg);\n    setSnackBarStatus(status);\n    setSnackBarContent(true);\n    setTimeout(() => {\n      setSnackBarContent(false);\n    }, 2000);\n  };\n\n  const handleCloseSwap = () => {\n    setOpenSwap(false);\n  };\n  useEffect(() => {\n    const address = localStorage.getItem(\"userAddress\");\n    setAddress(address);\n  }, []);\n  const formatWalletAddress = (text) => {\n    return text.slice(0, 15) + \"...\";\n  };\n\n  const copyAddress = () => {\n    setCopySuccess(true);\n    snackBar(\"Copied Wallet Address\", \"info\");\n  };\n\n  return (\n    <>\n      {snackBarContent && (\n        <SnackbarService msg={snackBarMsg} status={snackBarStatus} />\n      )}\n      <Box className=\"Banner\">\n        <ProfileCard />\n        <Paper className={classes.profileBox} mt={2} elevation={2}>\n          <Grid container spacing={3}>\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={3}\n              lg={4}\n              className={classes.centering}\n            >\n              <Box className=\"profileBoxImg\" align=\"center\">\n                <img\n                  src=\"images/profile_img.png\"\n                  width=\"85%\"\n                  alt=\"Profile Pic \"\n                />\n\n                <Box mt={1} className=\"flexCenter\">\n                  <Typography variant=\"body2\">\n                    {formatWalletAddress(address)}&nbsp;\n                  </Typography>\n                  <CopyToClipboard text={address}>\n                    {!copySuccess ? (\n                      <IconButton onClick={() => copyAddress()}>\n                        <MdOutlineContentCopy\n                          style={{\n                            color: \"rgb(250, 145, 49)\",\n                            cursor: \"pointer\",\n                            fontSize: \"18px\",\n                          }}\n                        />\n                      </IconButton>\n                    ) : (\n                      <span className=\"animate__animated animate__fadeIn\">\n                        <IconButton>\n                          <MdCheck\n                            style={{\n                              color: \"rgb(250, 145, 49)\",\n                              cursor: \"pointer\",\n                              fontSize: \"18px\",\n                            }}\n                          />\n                        </IconButton>\n                      </span>\n                    )}\n                  </CopyToClipboard>\n                </Box>\n\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  className={classes.swapbtn}\n                  onClick={() => setOpenSwap(true)}\n                >\n                  <img src=\"images/wallet_icon.png\" alt=\"image\" />\n                  &nbsp;&nbsp;&nbsp;&nbsp; Bridge Assets\n                </Button>\n              </Box>\n            </Grid>\n\n            <Grid item xs={12} sm={12} md={9} lg={8}>\n              <Grid\n                container\n                spacing={2}\n                alignItems=\"center\"\n                justifyContent=\"center\"\n              >\n                <Grid item md={4} xs={6}>\n                  <Box className=\"depositeBox\">\n                    <Select\n                      fullWidth\n                      onChange={(e) => {\n                        setTabViews(e.target.value);\n                        setcheckWithdraw(false);\n                        setcheckDeposit(true);\n                      }}\n                  \n                      value={tabViews}\n                    >\n                      <MenuItem\n                        value=\"deposit\"\n                        onClick={() => {\n                          setcheckWithdraw(false);\n                          setcheckDeposit(true);\n                        }}\n                        className={tabViews === \"deposit\" ? \"active\" : \"nonactive\"}\n                      >\n                        {\" \"}\n                        Deposit\n                      </MenuItem>\n                      {/* <MenuItem\n                        value=\"deposit-from-exchange\"\n                        onClick={() => {\n                          setcheckWithdraw(false);\n                          setcheckDeposit(true);                        Coming Soon\n                        }}\n                        className={\n                          tabViews === \"deposit-from-exchange\" ? \"active\" : \"nonactive\"\n                        }\n                      >\n                        Deposit to Exchange\n                      </MenuItem> */}\n                    </Select>\n                  </Box>\n                </Grid>\n                <Grid item md={4} xs={6}>\n                  <Box className=\"withdrawBox\">\n                    <Select\n                      fullWidth\n                      onChange={(e) => {\n                        setTabViews1(e.target.value);\n                        setcheckWithdraw(true);\n                        setcheckDeposit(false);\n                      }}\n                      \n                      value={tabViews1}\n                    >\n                      <MenuItem\n                        value=\"withdraw\"\n                        onClick={() => {\n                          setcheckWithdraw(true);\n                          setcheckDeposit(false);\n                        }}\n                        className={tabViews1 === \"withdraw\" ? \"active\" : \"nonactive\"}\n                      >\n                        Withdraw\n                      </MenuItem>\n                      {/* <MenuItem\n                        value=\"withdraw-from-exchange\"\n                        onClick={() => {\n                          setcheckWithdraw(true);\n                          setcheckDeposit(false);\n                        }}\n                        className={                                Coming Soon\n                          tabViews1 === \"withdraw-from-exchange\" ? \"active\" : \"nonactive\"\n                        }\n                      >\n                        Withdraw to Exchange\n                      </MenuItem> */}\n                    </Select>\n                  </Box>\n                </Grid>\n              </Grid>\n              <Box\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                {tabViews === \"deposit\" && checkDeposit && <Deposit />}\n                {/* {tabViews === \"deposit-from-exchange\" && checkDeposit && (\n                  <DepositFromExchange />                     Coming Soon\n                )} */}\n                {tabViews1 === \"withdraw\" && checkWithdraw && <Withdraw />}\n                {/* {tabViews1 === \"withdraw-from-exchange\" && checkWithdraw && (\n                  <WithdrawFromExchange />                     Coming Soon\n                )} */}\n              </Box>\n            </Grid>\n\n            <Box xs={12} align=\"center\" mt={3} className= {classes.midDisclamer}>\n              <Typography\n                variant=\"body1\" className= {classes.textDisclamer}\n             \n              >\n                Disclaimer: Please ensure that the Chain is set to Polygon Mumbai Testnet \n              </Typography>\n            </Box>\n          </Grid>\n          <Dialog\n            open={openSwap}\n            onClose={() => setOpenSwap(false)}\n            fullWidth\n            width=\"sm\"\n            style={{ borderRadius: \"10px !important\" }}\n          >\n            <div>\n              <div className={classes.temporaryDiv}>\n                <h1 className={classes.heading}>Only on Main Net</h1>\n              </div>\n            </div>\n            {/* <SwapModal handleCloseSwap={handleCloseSwap} />                   Coming Soon */}\n          </Dialog>\n        </Paper>\n      </Box>\n    </>\n  );\n};\n\nexport default Index;\n"],"sourceRoot":""}